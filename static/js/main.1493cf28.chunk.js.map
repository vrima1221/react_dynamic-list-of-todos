{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onShow","selectedTodoId","className","map","todo","id","completed","title","type","onClick","cn","TodoFilter","query","onSearch","selectedFilter","onFilterSelect","value","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","searchQuery","setSearchQuery","setSelectedTodoId","setSelectedFilter","normalizedQuery","toLowerCase","split","filter","Boolean","join","visibleTodos","isSearchQuery","includes","selectedFilterStatus","todoToShow","find","input","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1493cf28.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onShow: (id: number) => void\n  selectedTodoId: number\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    onShow,\n    selectedTodoId,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onShow(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(`far fa-eye${selectedTodoId === todo.id ? '-slash' : ''}`)} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  onSearch: (input: string) => void;\n  selectedFilter: string;\n  onFilterSelect: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    query,\n    onSearch,\n    selectedFilter,\n    onFilterSelect,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(event) => onFilterSelect(event.currentTarget.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onSearch(event.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const handleQueryChange = (input: string) => {\n    setSearchQuery(input);\n  };\n\n  const handleShowCLick = (id: number) => {\n    setSelectedTodoId(id);\n  };\n\n  const handleModalCloseClick = () => {\n    setSelectedTodoId(0);\n  };\n\n  const handleFilterSelect = (value: string) => {\n    setSelectedFilter(value);\n  };\n\n  const normalizedQuery = searchQuery\n    .toLowerCase()\n    .split(' ')\n    .filter(Boolean)\n    .join(' ');\n\n  const visibleTodos = todos.filter(todo => {\n    const normalizedTodoTitle = todo.title.toLowerCase();\n    const isSearchQuery = normalizedTodoTitle.includes(normalizedQuery);\n\n    let selectedFilterStatus = true;\n\n    if (selectedFilter === 'active') {\n      selectedFilterStatus = !todo.completed;\n    }\n\n    if (selectedFilter === 'completed') {\n      selectedFilterStatus = todo.completed;\n    }\n\n    return isSearchQuery && selectedFilterStatus;\n  });\n\n  const todoToShow = visibleTodos.find(todo => todo.id === selectedTodoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                onSearch={handleQueryChange}\n                selectedFilter={selectedFilter}\n                onFilterSelect={handleFilterSelect}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  onShow={handleShowCLick}\n                  selectedTodoId={selectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoToShow && <TodoModal todo={todoToShow} onClose={handleModalCloseClick} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}